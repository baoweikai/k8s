apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  labels:
    app: mysql
data:
  master.cnf: |
    [mysqld]
    lower_case_table_names=1
    bind-address=0.0.0.0
    # 打开binlog日志
    log-bin
    # log_bin_trust_function_creators=1
    # skip-name-resolve         #  跳过DNS反向解析过程.（这样就不能使用主机名连接mysql了，只能使用ip连接）
    # skip-grant-tables         #  跳过授权表（当mysql登陆密码忘记时的解决办法）
    # skip-networking           #  跳过TCP/IP连接
    # skip-host-cache           #  禁用主机名缓存;要想清除主机名缓存，执行FLUSH HOSTS语句或执行mysqladmin flush-hosts命令  slave.cnf: |
  slave.cnf: |
    [mysqld]
    lower_case_table_names=1
    bind-address=0.0.0.0
    # 机器设置只读
    super-read-only
    # skip-name-resolve         #  跳过DNS反向解析过程.（这样就不能使用主机名连接mysql了，只能使用ip连接）
    # skip-grant-tables         #  跳过授权表（当mysql登陆密码忘记时的解决办法）
    # skip-networking           #  跳过TCP/IP连接
    # skip-host-cache           #  禁用主机名缓存;要想清除主机名缓存，执行FLUSH HOSTS语句或执行mysqladmin flush-hosts命令  slave.cnf: |
## 服务
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
#  type: LoadBalancer
  selector:
    app: mysql
  ports:
  - port: 3306
    protocol: TCP
    # targetPort: 3306 # 应用端口
  clusterIP: None
## mysql节点
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec: 
  selector: 
    matchLabels: 
      app: mysql # 匹配 .spec.template.metadata.labels
  serviceName: mysql
  replicas: 3
  template: 
    metadata:
      labels:
        app: mysql # 匹配 .spec.selector.matchLabels
    spec:
      initContainers:
      - name: init-mysql
        image: mysql
        imagePullPolicy: IfNotPresent
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Generate mysql server-id from pod ordinal index.
          [[ `hostname` =~ ([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          # Copy appropriate conf.d files from config-map to emptyDir
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/master.cnf /etc/mysql/conf.d
          else
            cp /mnt/config-map/slave.cnf /etc/mysql/conf.d
          fi
        volumeMounts:
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: mysql
        image: mysql
        imagePullPolicy: IfNotPresent
        args: ["--default-authentication-plugin=mysql_native_password", "--initialize-insecure"]
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "huaren54321"
        - name: MYSQL_USER
          value: "zhrmghg"
        - name: MYSQL_PASSWORD
          value: "huaren54321"
        - name: MYSQL_DATABASE
          value: sxg mysql
        ports:
        - name: mysql
          protocol: TCP
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          # subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe: ## 存货探针
          exec:
            command:
            - /bin/sh
            - "-c"
            - MYSQL_PWD="${MYSQL_ROOT_PASSWORD}"
            - mysql -h 127.0.0.1 -u root -e "SELECT 1"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe: ## 状态探针
          exec:
            # Check we can execute queries over TCP (skip-networking is off).
            command: 
              - /bin/sh
              - "-c"
              - MYSQL_PWD="${MYSQL_ROOT_PASSWORD}"
              - mysql -h 127.0.0.1 -u root -e "SELECT 1"
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql
      - name: data
        hostPath: # 指向本地文件
          path: /mnt/data/mysql
## mysql-shell
---
apiVersion: v1
kind: Pod
metadata:
  name: mysql-shell
  labels:
    app: mysql
spec:
  containers:
    - name: mysqlsh
      image: registry.cn-beijing.aliyuncs.com/baoweikai/mysql-shell
      imagePullPolicy: IfNotPresent
      command:
        - /bin/sh
        - "-c"
        - --
      args: [ "while true; do sleep 30; done;" ]
      volumeMounts:
      - name: conf
        mountPath: /etc/mysql
  volumes:
  - name: conf
    hostPath: # 指向本地文件
      path: /mnt/k8s/etc/mysql
## 入口路由
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  namespace: default
  name: mysql-route
spec:
  entryPoints:
  - mysql
  routes:
  - match: Host(`mysql.ls.com`) # 首页
    services:
    - name: mysql
      port: 3306